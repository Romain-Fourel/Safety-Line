import { HttpClient} from "@angular/common/http";
import { Injectable } from "@angular/core";

@Injectable()
export class MovieService{
    
    //all deleted movies are kept in the array until the end of the program...
    //it could be a problem... or not !
    movies=[];

    static searchedMovies:any=[];

    
    static counter:number=0;

    static idUser:number;

    javaUrl = "http://localhost:8080/ws";

    constructor(private httpClient:HttpClient){
        MovieService.searchedMovies = [];
    }

    /**
     * To add a movie, we assume that the id generated by datanucleus will be the same 
     * as the position of the movie in the "movies" list.
     * As long as we use only one user, it seems to be true, but if there is an other user
     * on the application, this is totally false.
     * ==> To debug...
     */
    addMovie(infoMovie:any){
        
        //TODO: delete those 3 following lines: (when CORS issue will be fixed)
        var newMovie = {info:infoMovie,isFavorite:false,id:MovieService.counter};
        this.movies.push(newMovie);
        MovieService.counter++;

        /*
        var newMovie = {info:infoMovie,isFavorite:false};
        this.httpClient.post(this.javaUrl+"/ws/Movie/add/0",newMovie)
                       .subscribe((movie:any)=>{
                           this.movies.push(movie);
                           MovieService.counter++;
                       });
                       */
        
    }

    deleteMovie(id:number){
        this.movies[id] = undefined;
        /*this.httpClient.delete(this.javaUrl+"/Movie/del/0",this.movies[id]);*/
    }


    getMoviesFromUser(data:string[]){

        //as long as the interaction between angular and jersey doesn't work,
        // the connection is fake and there is no need to input an user name and a password
        MovieService.idUser = 0;
        
       /* this.httpClient.post(this.javaUrl+"/User/connect",data)
                       .subscribe((user:any)=>{
                        MovieService.idUser = user.id;
                        this.movies = user.movies;
                       });*/
    }


    getMoviesFromOMDb(name:string){
        
        //Because I don't know how to use HttpParams...
        let key="&apikey=f08bf9a0";
        let params = "?s="+name;

        this.httpClient.get("http://www.omdbapi.com/"+params+key)
                       .subscribe((response:any)=>{
                            let success = response.Response == "True";
                            if(success){
                                MovieService.searchedMovies = response.Search;
                            }
                       });
    }

}